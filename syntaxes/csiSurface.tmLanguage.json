{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "csiSurface",
  "patterns": [
    { "include": "#widget-declaration" },
    { "include": "#midi-mesage-declaration" },
    { "include": "#osc-mesage-declaration" },
    { "include": "#comments" }
  ],
  "foldingStartMarker": "^Widget\\s*[a-zA-Z\\\"\\s]*",
  "foldingStopMarker": "WidgetEnd\\s?\\;$",
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "(^[ \\t]+)?(?=\/\/)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.reaper"
            }
          },
          "end": "(?!\\G)",
          "patterns": [
            {
              "begin": "\/\/",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.reaper"
                }
              },
              "end": "\\n",
              "name": "comment.line"
            }
          ]
        }
      ]
    },
    "widget-declaration": {
      "name": "meta.function.expression.reaper",
      "begin": "(^Widget)\\s?([a-zA-z0-9_-]*)\\s?([\\s\\w]{3,})*",
      "beginCaptures": {
        "1": {
          "name": "storage.type.function"
        },
        "2": {
          "name": "entity.name.function.reaper"
        }
      },
      "end": "(?<=WidgetEnd)",
      "patterns": [
        {
          "include": "#single-line-comment-consuming-line-ending"
        }, {
          "include": "#midi-mesage-declaration"
        }, {
          "include": "#osc-mesage-declaration"
        }, {
          "include": "#function-end"
        }
      ]
    },
    "midi-mesage-declaration": {
      "name": "meta.function.expression.reaper",
      "begin": "\\s*([0-9a-zA-Z\\-_]{3,})((\\s[0-9a-f]{2}){3})((\\s[0-9a-fA-F]{2}){3})?\\s",
      "beginCaptures": {
        "1": {
          "name": "variable.parameter.reaper"
        },
        "2": {
          "name": "entity.name.type.reaper"
        },
        "4": {
          "name": "string.unquoted.reaper"
        }
      },
      "end": "(?<=[\\d\\w\\]\\.]\\n)",
      "patterns": [
        {
          "include": "#comments"
        }
      ]
    },
    "osc-mesage-declaration": {
      "name": "meta.function.expression.reaper",
      "begin": "\\s*([0-9a-zA-Z\\-_]{3,})\\s(\/)([a-zA-Z0-9\\-_]*)?\\s",
      "beginCaptures": {
        "1": {
          "name": "variable.parameter.reaper"
        },
        "2": {
          "name": "entity.name.type.reaper"
        },
        "3": {
          "name": "string.unquoted.reaper"
        }
      },
      "end": "(?<=[\\d\\w\\]\\.]\\n)",
      "patterns": [
        {
          "include": "#string"
        }, {
          "include": "#number"
        }, {
          "include": "#keywords"
        }, {
          "include": "#combinators"
        }, {
          "include": "#expression"
        }, {
          "include": "#comments"
        }, {
          "include": "#coordinate-list"
        }, {
          "include": "#comparison"
        }
      ]
    },
    "function-end": {
      "name": "keyword.operator.reaper",
      "match": "\\b(WidgetEnd)\\b"
    }
  },
  "scopeName": "source.mst"
}
